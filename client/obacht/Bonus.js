/* global goog, lime, obacht */
/* jshint devel:true */

goog.provide('obacht.Bonus');

// Obacht Requirements
goog.require('obacht.options');

// LimeJS Requirements
goog.require('lime.RoundedRect');
goog.require('lime.animation.Resize')

// Closure Library Requirements
goog.require('goog.pubsub.PubSub');

/**
 * Boni Object. Bonis are generated by the Server
 *
 * @constructor
 */
obacht.Bonus = function(type) {
	"use strict";
	var self = this;
	
	////////////////
    // ATTRIBUTES //
    ////////////////
	this.type = type;
	this.fill = obacht.options.bonus.general.path + this.type + '.png';


	////////////////////
    // LIMEJS OBJECTS //
    ////////////////////
	this.bonusButton = new lime.RoundedRect().setSize(obacht.options.bonus.general.size, obacht.options.bonus.general.size).setPosition(obacht.options.bonus.general.x, obacht.options.bonus.general.y).setFill(this.fill).setAnchorPoint(0, 0).setRadius(15);
    this.layer = new lime.Layer().setSize(obacht.options.graphics.VIEWPORT_WIDTH, obacht.options.graphics.VIEWPORT_HEIGHT);
    this.layer.appendChild(this.bonusButton);
    
    // Event Publisher/Subscriber
    this.events = new goog.pubsub.PubSub();

    
    /////////////////////////
    /* SUBSCRIBE TO EVENTS */
    /////////////////////////    
    goog.events.listen(this.bonusButton, ['touchstart', 'mousedown'], function(e) {
        if(obacht.options.bonus.general.state === 'new'){
            if(obacht.options.inventory.right.active === false){
                self.getItem('right');
                obacht.options.inventory.right.type = self.type;
                obacht.options.inventory.right.active = true;
            }else if(obacht.options.inventory.center.active === false){
                self.getItem('center');
                obacht.options.inventory.center.type = self.type;
                obacht.options.inventory.center.active = true;
            }else if(obacht.options.inventory.left.active === false){
                self.getItem('left');
                obacht.options.inventory.left.type = self.type;
                obacht.options.inventory.left.active = true;	
            }else {
                console.log('Inventary is full');
                self.deleteBonus();
                return false;
                //Bonus muss hier noch gel√∂scht werden	
            }
            return false;
        }
        if(obacht.options.bonus.general.state === 'mine'){
            self.useBonus();
        }
         
    });
     
};

obacht.Bonus.prototype = {
    
    getItem: function(inventary) {
        "use strict";
        obacht.options.bonus.general.state = 'mine';
        if(inventary === 'right'){
            this.moveTo(this.bonusButton, obacht.options.inventory.right.x, obacht.options.inventory.y );	
        }
        if(inventary === 'center'){
            this.moveTo(this.bonusButton, obacht.options.inventory.center.x, obacht.options.inventory.y );
        }
        if(inventary === 'left'){
            this.moveTo(this.bonusButton, obacht.options.inventory.left.x, obacht.options.inventory.y );
        }       
    },
    
    moveTo: function(object, moveX, moveY) {
        "use strict";
        object.runAction(new lime.animation.MoveTo(moveX, moveY).setDuration(obacht.options.bonus.general.moveToDuration).setEasing(lime.animation.Easing.LINEAR));
        object.runAction(new lime.animation.Resize(obacht.options.inventory.size, obacht.options.inventory.size).setDuration(obacht.options.bonus.general.moveToDuration));
    },
    
    useBonus: function() {
        "use strict";
        console.log('Feuer frei');
        obacht.mp.playerAction('trap', {
            type: this.type,
            d: 3
        });
        this.deleteBonus();
    },
    
    deleteBonus: function(){
        "use strict";
        this.layer.removeChild(this.bonusButton);
    }

};
